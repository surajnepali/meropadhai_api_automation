{
  "stats": {
    "suites": 3,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-18T12:50:53.273Z",
    "end": "2023-05-18T12:51:00.761Z",
    "duration": 7488,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1d8d3aed-1cd6-45cc-aa13-34713e5180c5",
      "title": "",
      "fullFile": "cypress/e2e/city.cy.js",
      "file": "cypress/e2e/city.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "943d500d-99c4-4896-934d-02ad5fe21a70",
          "title": "City API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "cbb1a0a0-7c26-474d-ae10-985a318d3d05",
              "title": "Try to access City API without login",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Can't post new City without admin Login",
                  "fullTitle": "City API Try to access City API without login Can't post new City without admin Login",
                  "timedOut": null,
                  "duration": 1016,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_city.default.createCityWithoutLogin(cityName).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message');\n  expect(response.body.message).to.eq('Unauthorized');\n});",
                  "err": {},
                  "uuid": "1b2bac47-ee1c-4288-ba97-4d491e19a2c8",
                  "parentUUID": "cbb1a0a0-7c26-474d-ae10-985a318d3d05",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Can't get all Cities without admin Login",
                  "fullTitle": "City API Try to access City API without login Can't get all Cities without admin Login",
                  "timedOut": null,
                  "duration": 586,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_city.default.getCitiesWithoutLogin().then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message');\n  expect(response.body.message).to.eq('Unauthorized');\n});",
                  "err": {},
                  "uuid": "1a81e1ac-5a0c-4a1b-a44c-bc5771ad1709",
                  "parentUUID": "cbb1a0a0-7c26-474d-ae10-985a318d3d05",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Can't get a City by ID without admin Login",
                  "fullTitle": "City API Try to access City API without login Can't get a City by ID without admin Login",
                  "timedOut": null,
                  "duration": 499,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_city.default.getCityByIDWithoutLogin(invalidCityID).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message');\n  expect(response.body.message).to.eq('Unauthorized');\n});",
                  "err": {},
                  "uuid": "72879ec9-e805-4d33-b92b-df4e18d08fcb",
                  "parentUUID": "cbb1a0a0-7c26-474d-ae10-985a318d3d05",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Can't edit a City by ID without admin Login",
                  "fullTitle": "City API Try to access City API without login Can't edit a City by ID without admin Login",
                  "timedOut": null,
                  "duration": 285,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_city.default.updateCityByIDWithoutLogin(invalidCityID, cityName).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message');\n  expect(response.body.message).to.eq('Unauthorized');\n});",
                  "err": {},
                  "uuid": "c9c8890a-e017-4f79-a273-f5e23ac009c4",
                  "parentUUID": "cbb1a0a0-7c26-474d-ae10-985a318d3d05",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Can't delete a City by ID without admin Login",
                  "fullTitle": "City API Try to access City API without login Can't delete a City by ID without admin Login",
                  "timedOut": null,
                  "duration": 271,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_city.default.deleteCityWithoutLogin(invalidCityID).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message');\n  expect(response.body.message).to.eq('Unauthorized');\n});",
                  "err": {},
                  "uuid": "82bebc85-7827-46d5-9e30-692d2be84d76",
                  "parentUUID": "cbb1a0a0-7c26-474d-ae10-985a318d3d05",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1b2bac47-ee1c-4288-ba97-4d491e19a2c8",
                "1a81e1ac-5a0c-4a1b-a44c-bc5771ad1709",
                "72879ec9-e805-4d33-b92b-df4e18d08fcb",
                "c9c8890a-e017-4f79-a273-f5e23ac009c4",
                "82bebc85-7827-46d5-9e30-692d2be84d76"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2657,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "54e0df6e-3b5d-4364-8f52-cb04adeb1041",
              "title": "Access City API after login",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Post new City",
                  "fullTitle": "City API Access City API after login Post new City",
                  "timedOut": null,
                  "duration": 543,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_city.default.createCity(cityName).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body).to.have.property('name');\n  expect(response.body.name).to.eq(cityName);\n  cityID = response.body._id;\n});",
                  "err": {},
                  "uuid": "5cab17bc-fdb5-4bf2-8824-953616840b3a",
                  "parentUUID": "54e0df6e-3b5d-4364-8f52-cb04adeb1041",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Can't post another City with same name",
                  "fullTitle": "City API Access City API after login Can't post another City with same name",
                  "timedOut": null,
                  "duration": 470,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_city.default.createCity(cityName).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('message');\n  expect(response.body.message).to.eq('City with name ' + cityName + ' already exists');\n});",
                  "err": {},
                  "uuid": "63bd1895-49fa-4a49-b5ae-64347f6d4d92",
                  "parentUUID": "54e0df6e-3b5d-4364-8f52-cb04adeb1041",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get all Cities",
                  "fullTitle": "City API Access City API after login Get all Cities",
                  "timedOut": null,
                  "duration": 480,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_city.default.getCities().then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('docs');\n});",
                  "err": {},
                  "uuid": "fae8c829-eb33-478d-9b55-3c0ef6a11fea",
                  "parentUUID": "54e0df6e-3b5d-4364-8f52-cb04adeb1041",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get City by ID",
                  "fullTitle": "City API Access City API after login Get City by ID",
                  "timedOut": null,
                  "duration": 464,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_city.default.getCityByID(cityID).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('name');\n  expect(response.body._id).to.eq(cityID);\n  expect(response.body.name).to.eq(cityName);\n});",
                  "err": {},
                  "uuid": "ddad98fa-47b0-4f99-a259-6414635ed630",
                  "parentUUID": "54e0df6e-3b5d-4364-8f52-cb04adeb1041",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Can't get City by invalid ID",
                  "fullTitle": "City API Access City API after login Can't get City by invalid ID",
                  "timedOut": null,
                  "duration": 480,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_city.default.getCityByID(invalidCityID).then(response => {\n  expect(response.status).to.eq(404);\n  expect(response.body).to.have.property('message');\n  expect(response.body.message).to.eq('City not found');\n});",
                  "err": {},
                  "uuid": "4b0a6854-3167-4bc9-a2af-85c4cadaeb52",
                  "parentUUID": "54e0df6e-3b5d-4364-8f52-cb04adeb1041",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Update City",
                  "fullTitle": "City API Access City API after login Update City",
                  "timedOut": null,
                  "duration": 542,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_city.default.updateCityByID(cityID, updateCity).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('name');\n  expect(response.body.name).to.eq('Dharaan');\n});",
                  "err": {},
                  "uuid": "d8cdf218-080b-45db-b2e1-ce30982a68cb",
                  "parentUUID": "54e0df6e-3b5d-4364-8f52-cb04adeb1041",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Can't update City with invalid ID",
                  "fullTitle": "City API Access City API after login Can't update City with invalid ID",
                  "timedOut": null,
                  "duration": 467,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_city.default.updateCityByID(invalidCityID, updateCity).then(response => {\n  expect(response.status).to.eq(404);\n  expect(response.body).to.have.property('message');\n  expect(response.body.message).to.eq('City not found');\n});",
                  "err": {},
                  "uuid": "e98f3bf4-d6ad-47dc-9089-fc7b82e0de74",
                  "parentUUID": "54e0df6e-3b5d-4364-8f52-cb04adeb1041",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Can't delete City with invalid ID",
                  "fullTitle": "City API Access City API after login Can't delete City with invalid ID",
                  "timedOut": null,
                  "duration": 505,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_city.default.deleteCity(invalidCityID).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).not.to.have.property('message');\n});",
                  "err": {},
                  "uuid": "a57a89ef-ae2d-4825-89e6-d076ccb3e188",
                  "parentUUID": "54e0df6e-3b5d-4364-8f52-cb04adeb1041",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Delete City",
                  "fullTitle": "City API Access City API after login Delete City",
                  "timedOut": null,
                  "duration": 483,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_city.default.deleteCity(cityID).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).not.to.have.property('message');\n});",
                  "err": {},
                  "uuid": "b5c23b91-a76c-400c-afbc-ffde1f6e85c5",
                  "parentUUID": "54e0df6e-3b5d-4364-8f52-cb04adeb1041",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5cab17bc-fdb5-4bf2-8824-953616840b3a",
                "63bd1895-49fa-4a49-b5ae-64347f6d4d92",
                "fae8c829-eb33-478d-9b55-3c0ef6a11fea",
                "ddad98fa-47b0-4f99-a259-6414635ed630",
                "4b0a6854-3167-4bc9-a2af-85c4cadaeb52",
                "d8cdf218-080b-45db-b2e1-ce30982a68cb",
                "e98f3bf4-d6ad-47dc-9089-fc7b82e0de74",
                "a57a89ef-ae2d-4825-89e6-d076ccb3e188",
                "b5c23b91-a76c-400c-afbc-ffde1f6e85c5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4434,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}